{"version":3,"file":"5.c651f1ded29ff680bc6b.hot-update.js","sources":["webpack:///pages/blocknumber.js"],"sourcesContent":["import React, {Component} from 'react';\nimport web3 from '../scripts/web3';\nimport Layout from '../components/Layout';\nimport {Table, Button, Input, Container, Form, Message} from 'semantic-ui-react';\nimport {Link, Router} from '../routes';\nimport timeConverter from '../scripts/timeconverter';\n\n\nclass BlockNumber extends Component {\n    state = {\n        txcount:0,\n        hash:'',\n        timestamp:'',\n        miner:'',\n        size:0,\n        transactions:[],\n        search:'',\n        errorMessage:''\n    }\n    static async getInitialProps(props) {\n        const {blocknumber} = props.query;\n        return {blocknumber};\n    }\n    async componentDidMount() {\n        while(true) {\n            const blockinfo = await web3.eth.getBlock(this.props.blocknumber);\n            const txcount = await web3.eth.getBlockTransactionCount(this.props.blocknumber);\n            const hash = blockinfo.hash;\n            const timestamp = blockinfo.timestamp;\n            const miner = blockinfo.miner;\n            const time = timeConverter(timestamp);\n            const size = blockinfo.size;\n            const transactions = blockinfo.transactions;\n            if(typeof txcount != 'integer') {\n                this.setState({txcount:txcount, hash:hash, timestamp:time, miner:miner, size:size, transactions:transactions});\n                break;\n            } else {\n                this.setState({txcount:txcount, hash:hash, timestamp:time, miner:miner, size:size, transactions:transactions});\n                continue;\n            }\n        }\n    }\n    onSubmit = async (event) => {\n        event.preventDefault();\n\n        if(this.state.search.length == 66) {\n            try {\n                await web3.eth.getTransaction(this.state.search);\n                Router.pushRoute(`/transaction/${this.state.search}`, {txhash:this.state.search}, {txhash:this.state.search});\n            } catch (err) {\n                const message = err.message;\n                this.setState({errorMessage:message})\n            }\n        } else if(this.state.search.length == 42) {\n            try {\n                await web3.eth.getBalance();\n                Router.pushRoute(`/address/${this.state.search}`, {address:this.state.search}, {address:this.state.search});\n            } catch (err) {\n                const message = err.message;\n                this.setState({errorMessage:message})\n            }\n        } else {\n            try {\n                const block = parseInt(this.state.search);\n                await web3.eth.getBlock(block);\n                Router.pushRoute(`/blocknumber/${this.state.search}`, {bnumber:this.state.search}, {bnumber:this.state.search});\n            } catch (err) {\n                const message = err.message;\n                this.setState({errorMessage:message})\n            }\n        }\n    }\n    render() {\n            return(\n                <Layout>\n                    <div>\n                        <Container>\n                            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                                <Form.Field>\n                                    <Input fluid icon=\"search\" placeholder=\"Enter address, tx hash or block number...\" \n                                        value={this.state.search}\n                                        onChange={event=>this.setState({search:event.target.value})}\n                                    />\n                                </Form.Field>\n                                <Message error header=\"Oops!\" content={this.state.errorMessage} />\n                            </Form>\n                        </Container>\n                        <div>\n                            <p>Block number: {this.props.blocknumber}</p>\n                            <p>Block hash: {this.state.hash}</p>\n                            <p>Mined on: {this.state.timestamp}</p>\n                            <p>Mined by: {this.state.miner}</p>\n                            <p>Block size: {this.state.size}</p>\n\n                        </div>\n                    </div>\n                </Layout>\n            );\n        }\n    }\n\nexport default BlockNumber;\n\n\n// WEBPACK FOOTER //\n// pages/blocknumber.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;AAiCA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AACA;AADA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AACA;AAVA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAcA;AAAA;AAAA;AAAA;AAAA;AAdA;AAAA;AACA;AADA;AAAA;AAAA;AAgBA;AACA;AAAA;AAAA;AAAA;AACA;AAlBA;AAAA;AAAA;AACA;AADA;AAAA;AAqBA;AArBA;AAAA;AACA;AADA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAvBA;AAAA;AACA;AADA;AAAA;AAAA;AAyBA;AACA;AAAA;AAAA;AAAA;AACA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;AAnBA;;;;;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;AAmCA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;;;AA/EA;;;;;;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAdA;AACA;AA4FA;AAAA;;;;;;;;;;;;AA7FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}